---
title: "Royal Street Names in Brisbane City"
---

Have you ever noticed the prevelance of Royal street names within Australia?

Living in Brisbane CBD, it's certainly quite known that female Royal street names run in one direction and males the other.

We can quite easily observe the commonality of this accross brisbane ...


<details><summary>Project setup</summary>
```{r}
#| warning: false
#| output: false

# install.packages("sf")
# install.packages("rmapshaper")
# install.packages("leaflet")
# install.packages("rgeos")

# Restore our r environment.
renv::restore(prompt = F)

# Load required packages.
library(sf)             # For reading Shape files.
library(rgeos)          # For reducing Shape files.
library(leaflet)        # Plotting Shape files.
library(data.table)     # For data.tables.

# Define a regex pattern of word-bounded Royal female and males names.
royal_female <- "\\b(Adelaide|Cordelia|countess|Cordeilla|Ann|Queen|Victoria|Mary|Louise|Alexandra|Elizabeth|Alice|Margaret|Charlotte|Augusta|Helena|Maud|Agnes|Helene|Caroline|Olga|Louisa|Diana)\\b"
royal_male <- "\\b(Albert|George|Charles|Edward|earl|Christian|Frederick|Louis|Arthur|William|Henry|Alexander|John|Philip|Douglas|Ernest|Patrick|Friederike|Auguste|Francis|David|Augustus|Antony)\\b"
```
</details>

<details>

```{r}
if(F){
    # Read the shapefile
    shapefile <- st_read("C:\\temp\\QSC_Extracted_Data\\QSC_Extracted_Data_20240418_144922083000-53700\\Queensland_roads_and_tracks.shp")


    # We're only interested in Brisbane City and of the below road class types.
    shapefile <- shapefile[
        shapefile$LGA_NAME_R == "Brisbane City"
    , ]
    shapefile <- shapefile[shapefile$ROAD_NAME_ %ilike% royal_female | shapefile$ROAD_NAME_ %ilike% royal_male, ]

    dt <- data.table(shapefile)

    View(dt[, .N, ROAD_NAME_][order(-N)])


    remove <- "Saint Helena|Mary Ellen| HOLT |CHRISTIAN COL|M MAC|OUTREACH|E ANNE L|FARRIOR|WILLIAM FAR| LESLIE |TONGE|JOHN FRAN|JOHN FINN|SAINT GEOR|JOHN FISH| GOD |SAINT|BISHOP|JOHN BRI|ISLEY| ULM |ARTHUR GO|SIR DA|GASKIN|SIRETT|JOLLY|COOKMAN|E PAGE"

    shapefile <- shapefile[!shapefile$ROAD_NAME_ %ilike% remove, ]

    dt <- data.table(shapefile)

    View(dt[, .N, ROAD_NAME_][order(-N)])


    st_write(shapefile, "./inputs/queens_n_queens.shp")

    head(shapefile)
    }
```
</details>

```{r}
#| warning: false
#| output: false

# Define the input path to our shapefile.
shapefile <- st_read("./inputs/queens_n_queens.shp")
 
# Coerce to a data.table.
dt <- data.table(shapefile)

# Inspect frequencies.
dt[, .N, ROAD_NAME_][order(-N)]

# Create a colour column that allows us to differential between female and male.
shapefile$color <- fifelse(shapefile$ROAD_NAME_ %ilike% royal_female, "red", "blue")

# Create a leaflet map.
    # - We'll use a minimilist base map.
    # - Add the polylines from the shapefile and allow for street name popups.
    # - Add coloured lines.
map <-  leaflet() %>%
    addProviderTiles(providers$CartoDB.Positron) %>%
    addPolylines(
        data = shapefile,
        color = ~color,
        weight = 3,
        popup = ~ROAD_NAME_
    ) %>%
    addLegend(
        colors = c("red", "blue"),
        labels = c("Female names", "Male names"),
        position = "bottomright"
    )
```

```{r}
# Display the map.
map
```

We can zoom in to the CBD to highlight what I was talking about earlier.
```{r}
map %>%
  setView(lng = "153.0255184", lat = "-27.4687535", zoom = 15)
```
